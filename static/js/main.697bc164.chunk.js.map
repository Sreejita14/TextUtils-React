{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.697bc164.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import {Link} from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n    return (\r\n     \r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    {/*<Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>*/}\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n        {/*  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>*/}\r\n        <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n       {/*} <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n    </li>*/}\r\n        \r\n      </ul>\r\n     {/*<form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n    </form>*/}\r\n     <div className={`form-check form-switch text-${props.mode ==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"  >Enable Dark mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n     \r\n    )\r\n}\r\n\r\nNavbar.propTypes ={title: PropTypes.string.isRequired,\r\n                    aboutText: PropTypes.string\r\n                    }\r\n\r\nNavbar.defaultProps = {\r\n        title: 'Set title here',\r\n        aboutText: 'About text here'\r\n};","import React,{useState} from \"react\";\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\nconst handleUpClick = ()=>{\r\n  //console.log(\"Upper case was clicked\" + text);\r\n  let newText = text.toUpperCase();\r\n  setText(newText);\r\n  props.showAlert(\"Converted to UPPERCASE\",\"success\");\r\n}\r\n\r\nconst handleLowClick = ()=>{\r\n  let newText = text.toLowerCase();\r\n  setText(newText);\r\n  props.showAlert(\"Converted to lowercase\",\"success\");\r\n}\r\nconst handleClearClick = ()=>{\r\n  let newText = '';\r\n  setText(newText);\r\n  props.showAlert(\"Text Cleard!\",\"success\");\r\n}\r\n\r\nconst handleCopy = ()=>{\r\n  let text = document.getElementById(\"myBox\");\r\n  text.select();\r\n  navigator.clipboard.writeText(text.value)\r\n  props.showAlert(\"Copied to Clipboard!\",\"success\");\r\n}\r\n\r\nconst handleExtraSpaces = ()=>{\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"))\r\n      props.showAlert(\"Extra spaces Removed!\",\"success\");\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst handleOnChange = (event)=>{\r\n  //console.log(\"On Change\");\r\n  setText(event.target.value);\r\n}\r\n\r\nconst [text,setText] = useState('')\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color:props.mode ==='dark'?'white':'#042743'}}>\r\n        <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value = {text} onChange = {handleOnChange} style={{backgroundColor:props.mode ==='dark'?'grey':'white',color:props.mode ==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-1\" onClick = {handleUpClick}>Convert to UpperCase</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick = {handleLowClick}>Convert to LowerCase</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick = {handleClearClick}>Clear Text</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick = {handleCopy}>Copy Text</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick = {handleExtraSpaces}>Remove Extra Space</button>\r\n      \r\n    </div>\r\n    <div className=\"container my-3\" style={{color:props.mode ==='dark'?'white':'#042743'}}>\r\n    <h2>Your text summary</h2>\r\n    <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n    <p>{0.008 * text.split(\" \").length} Minutes read </p>\r\n    <h2>Preview</h2>\r\n    <p>{text.length>0 ? text:\"Enter something in the text box above to preview it here\"}</p>\r\n    </div>\r\n\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n    const capitalize =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`}role=\"alert\" >\r\n       <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg} \r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","//import logo from \"./logo.svg\";\nimport \"./App.css\";\n//import About from \"./components/About\";\nimport Navbar from './components/Navbar';\n\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\n{/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";*/}\n\nfunction App() {\n  const [mode, setMode] = useState('light');//whether dark mode is enabled or not\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n\n\n  }\n\n\n  const toggleMode =()=>{\n    if(mode==='light')\n    {\n      setMode (\"dark\");\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      document.title = 'TextUtils - Dark Mode';\n    }\n    else\n    {\n      setMode (\"light\");\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n\n  return (\n  \n    <>\n   {/* <Router>*/}\n   <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode}/>\n   <Alert alert={alert} />\n   <div className=\"container my-3\">\n  \n   {/*<Switch>\n\n      /users  --> Component 1\n         /users/home --->  ---> Component 2 \n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">*/}\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyse below\" mode={mode}/>\n         \n         {/*} </Route>\n        </Switch>*/}\n        \n \n   </div>\n   {/*</Router>*/}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}